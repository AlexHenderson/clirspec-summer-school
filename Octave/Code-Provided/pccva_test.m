function [outcome, dataused]=pccva_test(traindata, trainclassnames, trainclassmembership, testdata, testclassnames, pcs, samplingtype, plotresults)

% function: pcdfa (actually PC-CVA)
%
%           Principal Components - Canonical Variates Analysis
%           Principal Components - Discriminant Function Analysis
% version:  3.2
%
% [outcome, dataused]=pcdfa(traindata, trainclassnames, trainclassmembership, testdata, testclassnames, pcs, samplingtype, plotresults);
%
% where:
%   traindata - a collection of spectra in rows used for training the model
%   trainclassnames - a list of the specific class label of each row of the
%                     training set
%   trainclassmembership - a list of the specific class membership of each
%                          row of the training set as numbers
%   testdata - a collection of spectra in rows used for testing the model
%   testclassnames - a list of the specific class label of each row of the
%                    test set
%   pcs - the appropriate number of pcs to use. This can be determined
%           using pressrsstest.m
%   samplingtype - one of 'bootstrap', 'loocv', 'holdout' depending on the
%                  method used to generate the training and test sets
%   plotresults - whether to plot the results; 1=yes, 0=no
%
%   outcome - structure containing the results of the PCA and CVA
%   dataused - structure containing the actual data used for this analysis,
%              basically a copy of the input
%
%   A plot is generated by default unless plotresults==0
%
%   DO NOT USE AUTOSCALED DATA (yet). 
%   THE PROJECTION OF TEST DATA INTO THE CVA-SPACE DOESN'T HANDLE IT.
%
%   Here we perform PCA on the training data and collect the required number
%   of pcs. Then we perform Discriminant Function Analysis (DFA) (actually
%   Canonical Variates Analysis, CVA) using the scores from the PCA. 
%   The test data is then projected into the CV-space and the output saved
%   and optionally plotted. 
%
%   The number of discriminant functions (canonical variates) is the number
%   of groups less 1. 
%
%   Copyright (c) April 2012, Alex Henderson 
%   Contact email: alex.henderson@manchester.ac.uk
%   Licenced under the GNU General Public License (GPL) version 3
%   http://www.gnu.org/copyleft/gpl.html
%   Other licensing options are available, please contact Alex for details
%   If you use this file in your work, please acknowledge the author(s) in
%   your publications. 

%   version 1.0 April 2012, Alex Henderson. 
%   Initial release. 
%   version 2.0 July 2012,  Alex Henderson. 
%   Modified to handle situations where there are only two classes and the
%   plotting function went wrong. 
%   version 3.0 July 2012, Alex Henderson. 
%   Changed the histogram limits although the main difference in plotting
%   is the way MATLAB decides to draw the axes. 
%   version 3.1 September 2013, Alex Henderson. 
%   Fixed error when projecting in a single datapoint in DFA (eg when doing
%   LOOCV).
%   version 3.2 September 2013, Alex Henderson. 
%   Fixed colour of projected data for single point histograms. This is the
%   case for LOOCV and 2 group CVA. 

[outcome, dataused]=pccva_test_v3_2(traindata, trainclassnames, trainclassmembership, testdata, testclassnames, pcs, samplingtype, plotresults);
